// Code generated by hertz generator.

package api

import (
	"context"
	"github.com/TremblingV5/DouTok/applications/api/biz/handler"
	"github.com/TremblingV5/DouTok/applications/api/initialize"
	"github.com/TremblingV5/DouTok/applications/api/initialize/rpc"
	"github.com/TremblingV5/DouTok/kitex_gen/favorite"
	"github.com/TremblingV5/DouTok/pkg/errno"
	"github.com/hertz-contrib/jwt"

	api "github.com/TremblingV5/DouTok/applications/api/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
)

// FavoriteAction .
//
//	@Tags		Favorite点赞
//
//	@Summary	点赞或取消点赞
//	@Description
//	@Param		req		body		api.DouyinFavoriteActionRequest	true	"点赞操作信息"
//	@Success	200		{object}	favorite.DouyinFavoriteActionResponse
//	@Failure	default	{object}	api.DouyinFavoriteActionResponse
//	@router		/douyin/favorite/action [POST]
func FavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinFavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		handler.SendResponse(c, handler.BuildFavoriteActionResp(errno.ErrBind))
		return
	}

	userId := int64(jwt.ExtractClaims(ctx, c)[initialize.AuthMiddleware.IdentityKey].(float64))
	resp, err := rpc.FavoriteAction(ctx, rpc.FavoriteClient, &favorite.DouyinFavoriteActionRequest{
		VideoId:    req.VideoId,
		ActionType: req.ActionType,
		UserId:     userId,
	})
	if err != nil {
		handler.SendResponse(c, handler.BuildFavoriteActionResp(errno.ConvertErr(err)))
		return
	}
	// TODO 此处直接返回了 rpc 的 resp
	handler.SendResponse(c, resp)
}

// FavoriteList .
//
//	@Tags		Favorite点赞
//
//	@Summary	返回点赞视频列表
//	@Description
//	@Param		req		query		api.DouyinFavoriteListRequest	true	"获取某个用户点赞了的视频的参数"
//	@Success	200		{object}	favorite.DouyinFavoriteListResponse
//	@Failure	default	{object}	api.DouyinFavoriteListResponse
//
//	@router		/douyin/favorite/list [GET]
func FavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DouyinFavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		handler.SendResponse(c, handler.BuildFavoriteListResp(errno.ErrBind))
		return
	}

	resp, err := rpc.FavoriteList(ctx, rpc.FavoriteClient, &favorite.DouyinFavoriteListRequest{
		UserId: req.UserId,
	})
	if err != nil {
		handler.SendResponse(c, handler.BuildFavoriteListResp(errno.ConvertErr(err)))
		return
	}
	// TODO 此处直接返回了 rpc 的 resp
	handler.SendResponse(c, resp)
}
